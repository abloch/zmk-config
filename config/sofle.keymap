#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

// #define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
// #define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <350>;
            quick-tap-ms = <0>;
            flavor = "tap-unless-interrupted";
            bindings = <&kp>, <&kp>;

            label = "homerow_mods";
        };

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&bt BT_SEL 0>;
        };

        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&bt BT_SEL 1>;
        };

        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&bt BT_SEL 2>;
        };

        td3: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&bt BT_SEL 3>;
        };

        td4: tap_dance_4 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RET>, <&bt BT_SEL 4>;
        };

        backlock: backlock {
            compatible = "zmk,behavior-tap-dance";
            label = "BACKLOCK";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp BACKSPACE>, <&kp LG(LC(Q))>;
        };

        space_layer1: space_layer1 {
            compatible = "zmk,behavior-tap-dance";
            label = "SPACE_LAYER1";
            #binding-cells = <0>;
            bindings = <&lt 1 SPACE>, <&sl 1>, <&to 1>;

            tapping-term-ms = <100>;
        };

        space_layer2: space_layer2 {
            compatible = "zmk,behavior-tap-dance";
            label = "SPACE_LAYER2";
            #binding-cells = <0>;
            bindings = <&lt 2 SPACE>, <&sl 2>, <&to 2>;

            tapping-term-ms = <100>;
        };

        tripple_flash: tripple_flash {
            compatible = "zmk,behavior-tap-dance";
            label = "TRIPPLE_FLASH";
            #binding-cells = <0>;
            bindings = <&none>, <&none>, <&bootloader>;
        };

        gui_raycast: gui_raycast {
            compatible = "zmk,behavior-tap-dance";
            label = "GUI_RAYCAST";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI>, <&kp LG(D)>;

            tapping-term-ms = <150>;
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    macros {
        arc1: arc1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LA(LC(LG(A)))>,
                <&macro_wait_time 200>,
                <&kp LC(NUMBER_1)>;

            label = "ARC1";
        };

        arc2: arc2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LA(LC(LG(A)))>,
                <&macro_wait_time 200>,
                <&kp LC(NUMBER_2)>;

            label = "ARC2";
        };
    };

    combos {
        compatible = "zmk,combos";

        bootloader_left {
            bindings = <&bootloader>;
            key-positions = <39 40>;
        };

        bootloader_right {
            bindings = <&bootloader>;
            key-positions = <51 50>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1            &kp N2       &kp N3        &kp N4          &kp N5           &kp UP     &kp N6         &kp N7          &kp N8      &kp N9       &kp N0               &backlock
&kp TAB     &kp Q             &kp W        &kp E         &kp R           &kp T            &kp DOWN   &kp Y          &kp U           &kp I       &kp O        &kp P                &caps_word
&kp GRAVE   &hm LEFT_SHIFT A  &hm LCTRL S  &hm LALT D    &hm LEFT_GUI F  &kp G            &kp LEFT   &kp H          &hm LEFT_GUI J  &hm LALT K  &hm LCTRL L  &hm LSHFT BACKSPACE  &kp PLUS
&kp LCTRL   &kp Z             &kp X        &kp C         &kp V           &kp B            &kp RIGHT  &kp N          &kp M           &kp COMMA   &kp DOT      &kp SLASH            &mkp MB4
&kp C_MUTE  &sk LSHFT         &kp LALT     &gui_raycast  &gui_raycast    &space_layer1    &kp RET    &space_layer2  &kp RET         &kp RET     &kp MINUS    &kp TILDE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "base";
        };

        layer_1 {
            bindings = <
&to 0             &kp F1                &kp F2                 &kp F3     &kp F4             &kp F5           &mmv MOVE_UP     &kp F6     &kp F7    &kp F8          &kp F9         &kp F10        &kp LG(LC(Q))
&kp TAB           &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp COLON  &kp DOUBLE_QUOTES  &kp SQT          &mmv MOVE_DOWN   &none      &kp HOME  &kp UP          &kp PG_UP      &kp F11        &kp F12
&kp GRAVE         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS  &kp EXCLAMATION    &kp PIPE         &mmv MOVE_LEFT   &none      &kp LEFT  &kp DOWN_ARROW  &kp RIGHT      &kp BACKSPACE  &kp EQUAL
&kp LC(C)         &kp LESS_THAN         &kp GREATER_THAN       &kp EQUAL  &kp SEMI           &kp AMPERSAND    &mmv MOVE_RIGHT  &none      &kp END   &kp DEL         &kp PAGE_DOWN  &kp QUESTION   &mkp MB5
&kp C_PLAY_PAUSE  &kp LG(X)             &kp LG(C)              &kp LG(V)  &kp LSHFT          &kp SPACE        &mkp LCLK        &kp SPACE  &kp RET   &none           &none          &none
            >;

            display-name = "symb";
            sensor-bindings = <&inc_dec_kp C_NEXT C_PREV>;
        };

        layer_2 {
            bindings = <
&to 0             &arc1                 &arc2                  &none           &none              &tripple_flash      &mmv MOVE_UP     &tripple_flash    &none             &none                 &none              &none            &kp LG(LC(Q))
&kp TAB           &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp COLON       &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE    &mmv MOVE_DOWN   &kp LA(NUMBER_6)  &kp LA(N7)        &kp LA(N8)            &kp LA(N9)         &kp LA(N0)       &none
&kp GRAVE         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS       &kp EXCL           &kp PIPE            &mmv MOVE_LEFT   &none             &kp LA(LS(LEFT))  &sk LA(LC(LEFT_GUI))  &kp LS(LA(RIGHT))  &kp BACKSPACE    &none
&kp LC(C)         &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp UNDERSCORE  &kp DOLLAR         &kp STAR            &mmv MOVE_RIGHT  &kp LA(NUMBER_1)  &kp LA(NUMBER_2)  &kp LA(N3)            &kp LA(NUMBER_4)   &kp LA(N5)       &mkp MB5
&kp C_PLAY_PAUSE  &kp LG(X)             &kp LG(C)              &kp LG(V)       &kp LSHFT          &kp SPACE           &mkp LCLK        &kp SPACE         &kp RET           &none                 &rgb_ug RGB_EFF    &rgb_ug RGB_TOG
            >;

            display-name = "wsps";
            sensor-bindings = <&inc_dec_kp C_NEXT C_PREV>;
        };
    };
};
