#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&msc {
    acceleration-exponent = <2>;
    time-to-max-speed-ms = <1500>;
    delay-ms = <0>;
};

&mmv {
    time-to-max-speed-ms = <1500>;
    acceleration-exponent = <2>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    macros {
        // M0: {} with cursor inside
        m0: m0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RBRC &kp LEFT_ARROW>;
            label = "M0";
        };

        // M1: () with cursor inside  
        m1: m1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT_ARROW>;
            label = "M1";
        };

        // M2: [] with cursor inside
        m2: m2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT_ARROW>;
            label = "M2";
        };

        // M3: Terminal command
        m3: m3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LC(LA(T))) &macro_wait_time 100 &kp LA(NUMBER_3)>;
            label = "M3";
        };

        // M4: Alt+7, Cmd+Enter
        m4: m4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_7) &macro_wait_time 100 &kp LG(ENTER)>;
            label = "M4";
        };

        // M5: Cmd+K, Cmd+[
        m5: m5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(K) &kp LG(LEFT_BRACKET)>;
            label = "M5";
        };

        // M6: Cmd+K, Cmd+]
        m6: m6 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(K) &kp LG(RIGHT_BRACKET)>;
            label = "M6";
        };

        // M7: Cmd+K, Cmd+0
        m7: m7 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(K) &kp LG(NUMBER_0)>;
            label = "M7";
        };

        // M8: Alt+Cmd+P
        m8: m8 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LG(P))>;
            label = "M8";
        };

        // M9: ESC, ZZ (vim exit)
        m9: m9 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp LS(Z) &kp LS(Z)>;
            label = "M9";
        };

        // M10: Ctrl+Cmd+Q
        m10: m10 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LG(Q))>;
            label = "M10";
        };

        // M11: Alt+1, Ctrl+1
        m11: m11 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_1) &macro_wait_time 100 &kp LC(NUMBER_1)>;
            label = "M11";
        };

        // M12: Alt+1, Ctrl+2
        m12: m12 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_1) &macro_wait_time 100 &kp LC(NUMBER_2)>;
            label = "M12";
        };

        // M13: Alt+Ctrl+Left
        m13: m13 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LC(LEFT_ARROW))>;
            label = "M13";
        };

        // M14: Alt+Ctrl+Right
        m14: m14 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LC(RIGHT_ARROW))>;
            label = "M14";
        };

        // M15: "kubiya" text
        m15: m15 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = 
                <&macro_tap &kp K &kp U &kp B &kp I &kp Y &kp A>;
            label = "M15";
        };

        // M20: Ctrl+`, !!, Enter
        m20: m20 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(GRAVE) &macro_wait_time 100 &kp EXCL &kp EXCL &kp ENTER>;
            label = "M20";
        };
    };

    behaviors {
        // TD0: GUI tap, GUI-D on double tap, GUI-D on triple tap  
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&kp LGUI>, <&kp LGUI>, <&kp LG(D)>;
        };

        // TD2: Shift tap, Shift double tap, Shift one-shot on triple tap
        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHIFT>, <&kp LSHIFT>, <&sk LSHIFT>;
        };

        // TD3: Alt one-shot tap, Alt on double tap
        td3: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk LALT>, <&kp LALT>;
        };

        // TD10: L tap, macro M10 on triple tap
        td10: tap_dance_10 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp L>, <&none>, <&m10>;
        };

        // TD15: K tap, macro M15 on triple tap  
        td15: tap_dance_15 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&kp K>, <&none>, <&m15>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // From Vial: T+G = semicolon (adapt key positions for 52-key layout)
        semicolon {
            bindings = <&kp SEMI>;
            key-positions = <17 31>; // T + G
        };

        // From Vial: G+B = pipe
        pipe {
            bindings = <&kp PIPE>;
            key-positions = <31 44>; // G + B  
        };

        // From Vial: D+R = slash
        slash {
            bindings = <&kp SLASH>;
            key-positions = <29 17>; // D + R
        };

        // From Vial: F+E = backslash
        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <16 30>; // F + E
        };

        // From Vial: F+S = minus
        dash {
            bindings = <&kp MINUS>;
            key-positions = <30 28>; // F + S
        };

        // From Vial: X+V = underscore
        underscore {
            bindings = <&kp UNDER>;
            key-positions = <43 41>; // X + V
        };

        // From Vial: J+L = plus
        plus {
            bindings = <&kp PLUS>;
            key-positions = <34 36>; // J + L
        };

        // From Vial: DOT+M = equal
        eql {
            bindings = <&kp EQUAL>;
            key-positions = <47 49>; // DOT + M
        };

        // From Vial: H+Y = less than
        lt {
            bindings = <&kp LT>;
            key-positions = <33 32>; // H + Y
        };

        // From Vial: H+N = greater than
        gt {
            bindings = <&kp GT>;
            key-positions = <33 45>; // H + N
        };

        // From Vial: S+D+F = momentary layer 3
        mo3 {
            bindings = <&mo 3>;
            key-positions = <28 29 30>; // S + D + F
        };

        // From Vial: M+COMMA+DOT = one-shot layer 4
        mo4 {
            bindings = <&sl 4>;
            key-positions = <46 47 48>; // M + COMMA + DOT
        };

        // From Vial: Q+D = mouse button 1
        mb1 {
            bindings = <&mkp LCLK>;
            key-positions = <14 29>; // Q + D
        };

        // From Vial: A+C = mouse button 2
        mb2 {
            bindings = <&mkp RCLK>;
            key-positions = <27 41>; // A + C
        };

        // From Vial: S+E+F = momentary layer 2
        mo2 {
            bindings = <&mo 2>;
            key-positions = <28 16 30>; // S + E + F
        };

        // From Vial: A+S+E+F = to layer 2
        to2 {
            bindings = <&to 2>;
            key-positions = <27 28 16 30>; // A + S + E + F
        };

        // From Vial: J+K+L = one-shot layer 4
        osl4 {
            bindings = <&sl 4>;
            key-positions = <34 35 36>; // J + K + L
        };

        // From Vial: A+S+D+F = to layer 3
        to3 {
            bindings = <&to 3>;
            key-positions = <27 28 29 30>; // A + S + D + F
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Layer 0: Base layer from Vial
        base {
            bindings = <
&bootloader         &bootloader &bootloader &bootloader   &bootloader  &bootloader     &bootloader      &bootloader &bootloader  &bootloader   &bootloader &bootloader    &bootloader
&kp TAB             &kp Q       &kp W       &kp E         &kp R        &kp T           &td0             &kp Y       &kp U        &kp I         &kp O       &td10          &kp LG(LEFT)
&kp ESCAPE          &kp A       &kp S       &kp D         &kp F        &kp G           &lt 2 SPACE      &kp H       &kp J        &td15         &kp L       &kp BACKSPACE  &mkp MB4
&kp GRAVE           &kp Z       &kp X       &kp C         &kp V        &kp B           &td2             &kp N       &kp M        &kp COMMA     &kp DOT     &kp FSLH       &kp LS(GRAVE)
&kp LC(LA(LG(M)))   &none       &kp C_MUTE  &kp LG(LC(LA(M))) &lt 2 SPACE &kp LSHIFT  &kp LG(LC(LA(F))) &kp LCTRL   &lt 1 ENTER  &td3          &none       &none
            >;

            sensor-bindings = <&inc_dec_kp LG(LS(Z)) LG(Z) &inc_dec_kp C_VOL_UP C_VOL_DN>;
            display-name = "base";
        };

        // Layer 1: Symbols layer from Vial  
        symbols {
            bindings = <
&none       &none   &none            &none              &none             &none             &none            &none      &none             &none             &none             &none             &none
&to 0       &m0     &kp SEMI         &kp DQT            &kp SQT           &kp CARET         &kp LGUI         &kp CARET  &kp LA(NUMBER_7)  &kp LA(NUMBER_8)  &kp LA(N9)        &m12              &m11
&kp ESC     &m1     &kp DOLLAR       &kp PERCENT        &kp AMPS          &kp ASTRK         &kp SPACE        &m3        &kp LA(NUMBER_4)  &kp LA(NUMBER_5)  &kp LA(NUMBER_6)  &m13              &m14
&kp QUESTION &m2    &kp EXCL         &kp AT             &kp HASH          &kp COLON         &td2             &kp LA(NUMBER_0) &kp LA(NUMBER_1) &kp LA(NUMBER_2) &kp LA(NUMBER_3) &m14              &none
&none       &none   &none            &kp LGUI           &to 3             &kp LSHIFT        &kp LCTRL        &kp LCTRL  &kp ENTER         &kp LALT          &none            &none
            >;

            display-name = "symbols";
            sensor-bindings = <&inc_dec_kp LG(RIGHT) LG(LEFT) &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        // Layer 2: Navigation layer from Vial
        nav {
            bindings = <
&none           &none             &none             &none             &none             &none            &none            &none      &none           &none     &none      &none             &none
&to 0           &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &none             &none            &kp LGUI         &m7        &kp PG_UP       &kp UP    &kp HOME  &none             &msc SCRL_LEFT
&kp ESC         &kp LC(NUMBER_1)  &kp LC(NUMBER_2)  &kp LC(NUMBER_3)  &kp LC(NUMBER_4)  &kp LC(NUMBER_5) &kp SPACE        &m5        &kp LEFT_ARROW  &kp DOWN  &kp RIGHT &kp LA(BACKSPACE) &none
&kp LC(GRAVE)   &none             &none             &none             &kp LS(F4)        &kp F4           &kp LSHIFT       &m6        &kp PG_DN       &kp DEL   &kp END   &kp LA(DELETE)    &msc SCRL_RIGHT
&none           &none             &trans            &kp LGUI          &to 3             &kp LSHIFT       &kp LCTRL        &kp LCTRL  &kp ENTER       &kp LALT  &none     &none
            >;

            sensor-bindings = <&inc_dec_kp LG(EQUAL) LG(MINUS) &inc_dec_kp K_SCROLL_DOWN K_SCROLL_UP>;
            display-name = "nav";
        };

        // Layer 3: Numbers layer from Vial
        numbers {
            bindings = <
&none        &none   &none   &none   &none   &none   &none            &none      &none         &none   &none   &none   &none
&to 0        &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp LGUI         &kp ASTRK  &kp N7        &kp N8  &kp N9  &none   &none
&to 0        &kp LC(NUMBER_1) &kp LC(NUMBER_2) &kp LC(NUMBER_3) &kp LC(NUMBER_4) &none &kp SPACE &kp PLUS &kp N4 &kp N5  &kp N6  &kp NUMBER_0 &none
&none        &none   &none   &none   &none   &none   &kp LSHIFT       &kp MINUS  &kp N1        &kp N2  &kp N3  &kp DOT &none
&none        &none   &none   &none   &none   &none   &kp LCTRL        &kp LCTRL  &kp NUMBER_0  &none   &none   &none
            >;

            sensor-bindings = <&scroll_encoder &scroll_encoder>;
            display-name = "numbers";
        };

        // Layer 4: Function layer from Vial
        function {
            bindings = <
&none            &none      &none      &none      &none              &none          &none            &none  &none         &none         &none          &none      &none
&to 0            &m9        &kp F2     &kp LG(F12) &kp F12           &kp F9         &kp LGUI         &kp F5 &kp LS(F11)   &kp F11       &kp F10        &m8        &none
&to 0            &m20       &kp LG(LC(LA(S))) &none &kp LG(F)    &kp LG(LS(F))  &none            &kp LG(LS(F5)) &kp LG(LS(L)) &m15 &kp F4 &none &none
&kp CAPS         &none      &none      &kp LG(LS(C)) &kp LG(V)      &kp LG(LC(LA(V))) &kp CAPS_WORD &kp LS(F5) &none    &none         &m4            &none &none
&none            &none      &none      &none      &none              &none          &kp LCTRL        &kp LCTRL  &none         &none         &none          &none
            >;

            sensor-bindings = <&scroll_encoder &scroll_encoder>;
            display-name = "function";
        };

        // Layer 5: Transparent layer from Vial
        transparent {
            bindings = <
&trans   &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
&trans   &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
&trans   &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
&trans   &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
&trans   &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
            display-name = "transparent";
        };
    };

    conditional_layers {
    };
};
